public async Task<IActionResult> Create(CadastroEmpresaViewModel model)
        {
            if (!ModelState.IsValid)
            {
                await PopularDropDowns(model);
                return View(model);
            }

            using var transaction = await _context.Database.BeginTransactionAsync();
            try
            {
                // 1. Localização da sede
                var localizacao = new Localizacao
                {
                    Provincia = model.Provincia,
                    Distrito = model.Distrito,
                    Bairro = model.Bairro,
                    AvenidaRua = model.AvenidaRua,
                    Numero = model.Numero,
                    Latitude = (float)model.Latitude,
                    Longitude = (float)model.Longitude,
                    Referencia = model.Referencia
                };
                _context.Localizacoes.Add(localizacao);
                await _context.SaveChangesAsync();

                // 2. Empresa
                var empresa = new Empresa
                {
                    NUIT = model.NUIT,
                    Nome = model.Nome,
                    Sigla = model.Sigla,
                    NumeroAlvara = model.NumeroAlvara,
                    AnoConstituicao = model.AnoConstituicao,
                    DataInicioAno = model.DataInicioAno,
                    DataInicioMes = model.DataInicioMes,
                    LocalizacaoId = localizacao.LocalizacaoId,
                    NumTrabalhadoresHomens = model.NumTrabalhadoresHomens,
                    NumTrabalhadoresMulheres = model.NumTrabalhadoresMulheres,
                    TipoEntidade = model.TipoEntidade,
                    FormaJuridica = model.FormaJuridica,
                    TipoContabilidade = model.TipoContabilidade,
                    SituacaoActividade = model.SituacaoActividade,
                    SucursalNoPais = model.SucursalNoPais,
                    QuantidadeSucursalNoPais = model.QuantidadeSucursalNoPais,
                    GrupoEmpresarial = model.GrupoEmpresarial,
                    NomeGrupoEmpresarial = model.NomeGrupoEmpresarial,
                    PaisGrupoEmpresarial = model.PaisGrupoEmpresarial,
                    CapitalSocial = model.CapitalSocial,
                    VolumeNegocios = model.VolumeNegocios,
                    Despesas = model.Despesas,
                    CapitalSocialPublico = model.CapitalSocialPublico,
                    CapitalPrivadoNacional = model.CapitalPrivadoNacional,
                    CapitalPrivadoEstrangeiro = model.CapitalPrivadoEstrangeiro
                };
                _context.Empresas.Add(empresa);
                await _context.SaveChangesAsync();

                // 3. Contacto sede
                var contacto = new Contacto
                {
                    Fax1 = model.Fax1,
                    Fax2 = model.Fax2,
                    Telemovel1 = model.Telemovel1,
                    Telemovel2 = model.Telemovel2,
                    Telemovel3 = model.Telemovel3,
                    Email = model.Email,
                    Website = model.Website,
                    SedeId = empresa.Id
                };
                _context.Contactos.Add(contacto);
                await _context.SaveChangesAsync();

                // 4. Responsável sede
                var responsavel = new Responsavel
                {
                    EmpresaId = empresa.Id,
                    Nome = model.NomeResponsavel,
                    Funcao = model.FuncaoResponsavel,
                    Telemovel = model.TelemovelResponsavel,
                    Email = model.EmailResponsavel
                };
                _context.Responsaveis.Add(responsavel);
                await _context.SaveChangesAsync();

                var localizacaoSucursal = new Localizacao
                {
                    Provincia = model.Provincia_Sucursal,
                    Distrito = model.Distrito_Sucursal,
                    Bairro = model.Bairro_Sucursal,
                    AvenidaRua = model.AvenidaRua_Sucursal,
                    Numero = model.Numero_Sucursal ?? 0,
                    Latitude = (float)model.Latitude_Sucursal,
                    Longitude = (float)model.Longitude_Sucursal,
                    Referencia = model.Referencia_Sucursal
                };
                _context.Localizacoes.Add(localizacaoSucursal);
                await _context.SaveChangesAsync();

                var sucursal = new Sucursal
                {
                    NUIT = model.NUIT_Sucursal,
                    Nome = model.Nome_Sucursal,
                    Sigla = model.Sigla_Sucursal,
                    NumeroAlvara = model.NumeroAlvara_Sucursal,
                    AnoConstituicao = model.AnoConstituicao_Sucursal ?? 0,
                    DataInicioAno = model.DataInicioAno_Sucursal ?? 0,
                    DataInicioMes = model.DataInicioMes_Sucursal ?? 0,
                    LocalizacaoId = localizacaoSucursal.LocalizacaoId,
                    NumTrabalhadoresHomens = model.NumTrabalhadoresHomens_Sucursal ?? 0,
                    NumTrabalhadoresMulheres = model.NumTrabalhadoresMulheres_Sucursal ?? 0,
                    EmpresaId = empresa.Id,
                    TipoEntidade = model.TipoEntidade_Sucursal,
                    SituacaoActividade = model.SituacaoActividade_Sucursal,
                    GrupoEmpresarial = model.GrupoEmpresarial_Sucursal,
                    NomeGrupoEmpresarial = model.NomeGrupoEmpresarial_Sucursal,
                    PaisGrupoEmpresarial = model.PaisGrupoEmpresarial_Sucursal,
                };
                _context.Sucursais.Add(sucursal);
                await _context.SaveChangesAsync();

                var contactoSucursal = new Contacto
                {
                    Fax1 = model.Fax1_Sucursal,
                    Fax2 = model.Fax2_Sucursal,
                    Telemovel1 = model.Telemovel1_Sucursal,
                    Telemovel2 = model.Telemovel2_Sucursal,
                    Telemovel3 = model.Telemovel3_Sucursal,
                    Email = model.Email_Sucursal,
                    Website = model.Website_Sucursal,
                    SedeId = sucursal.Id
                };
                _context.Contactos.Add(contactoSucursal);
                await _context.SaveChangesAsync();

                var responsavelSucursal = new Responsavel
                {
                   // EmpresaId = sucursal.Id,
                    ResponsavelId = sucursal.Id,
                    Nome = model.NomeResponsavel_Sucursal,
                    Funcao = model.FuncaoResponsavel_Sucursal,
                    Telemovel = model.TelemovelResponsavel_Sucursal,
                    Email = model.EmailResponsavel_Sucursal
                };
                _context.Responsaveis.Add(responsavelSucursal);
                await _context.SaveChangesAsync();

                // Finaliza transação
                await transaction.CommitAsync();
                return RedirectToAction(nameof(Index));
            }
            catch (Exception)
            {
                await transaction.RollbackAsync();
                ModelState.AddModelError(string.Empty, "Erro ao gravar os dados. Nenhum dado foi salvo.");
                await PopularDropDowns(model);
                return View(model);
            }
        }